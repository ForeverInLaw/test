# your_bot/handlers/fsm/category_update_fsm.py
# FSM –¥–∏–∞–ª–æ–≥ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏

import logging
import math
from aiogram import types, F, Router
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.filters import StateFilter

from typing import Optional, Union, List

# –ò–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π —Ä–∞–±–æ—Ç—ã —Å –ë–î
# –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –∏–º–ø–æ—Ä—Ç
from utils import db

# –ò–º–ø–æ—Ä—Ç –æ–±—â–∏—Ö FSM —É—Ç–∏–ª–∏—Ç –∏ –∫–æ–Ω—Å—Ç–∞–Ω—Ç
from .fsm_utils import (
    CANCEL_FSM_CALLBACK, CONFIRM_ACTION_CALLBACK, generate_pagination_keyboard,
    PAGINATION_CALLBACK_PREFIX, SKIP_INPUT_MARKER
)
# –ò–º–ø–æ—Ä—Ç –∞–¥–º–∏–Ω—Å–∫–∏—Ö –∫–æ–Ω—Å—Ç–∞–Ω—Ç
from ..admin_constants_aiogram import (
    CATEGORY_UPDATE_INIT_CALLBACK_PREFIX, UPDATE_CAT_PARENT_PAGE_PREFIX,
    UPDATE_CAT_PARENT_SEL_PREFIX, KEEP_CURRENT_PARENT_CALLBACK
)

# –ò–º–ø–æ—Ä—Ç —Ö–µ–ª–ø–µ—Ä–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏/—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ admin_list_detail_handlers_aiogram
# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ü–∏–∫–ª–∏—á–µ—Å–∫–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞ –Ω–∞ —É—Ä–æ–≤–Ω–µ –º–æ–¥—É–ª—è
from ..admin_list_detail_handlers_aiogram import _send_or_edit_message

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logger = logging.getLogger(__name__)

# –†–∞–∑–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Ä–æ–¥–∏—Ç–µ–ª—è
CATEGORY_PAGE_SIZE_UPDATE = 10 # –ú–æ–∂–µ—Ç –æ—Ç–ª–∏—á–∞—Ç—å—Å—è –æ—Ç ADD/LIST


# --- FSM States ---
class CategoryUpdateFSM(StatesGroup):
    """–°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –¥–∏–∞–ª–æ–≥–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏."""
    waiting_for_name = State()
    # Note: Ignoring 'waiting_for_description' as per provided DB schema
    waiting_for_parent_decision = State() # –ñ–¥–µ–º —Ä–µ—à–µ–Ω–∏—è: –æ–±–Ω–æ–≤–∏—Ç—å, —É–¥–∞–ª–∏—Ç—å, –æ—Å—Ç–∞–≤–∏—Ç—å —Ä–æ–¥–∏—Ç–µ–ª—è
    waiting_for_parent_selection = State() # –ñ–¥–µ–º –≤—ã–±–æ—Ä–∞ –Ω–æ–≤–æ–π —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    confirm_update = State()

# --- Handlers ---
async def start_category_update(callback_query: types.CallbackQuery, state: FSMContext):
    """–ù–∞—á–∏–Ω–∞–µ—Ç –¥–∏–∞–ª–æ–≥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏."""
    await callback_query.answer()

    # –ü–∞—Ä—Å–∏–º ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ callback_data
    try:
        # –û–∂–∏–¥–∞–µ—Ç—Å—è —Ñ–æ—Ä–º–∞—Ç callback_data: {–ø—Ä–µ—Ñ–∏–∫—Å_–∏–Ω–∏—Ü–∏–∞—Ü–∏–∏_–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è}{id}
        category_id_str = callback_query.data.replace(CATEGORY_UPDATE_INIT_CALLBACK_PREFIX, "")
        category_id = int(category_id_str)
    except ValueError:
        logger.error(f"–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ –∫–æ–ª–±—ç–∫–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {callback_query.data}")
        await _send_or_edit_message(callback_query, "‚ùå –û—à–∏–±–∫–∞: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.")
        await state.clear() # –°–±—Ä–∞—Å—ã–≤–∞–µ–º FSM
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        from ..admin_handlers_aiogram import show_admin_main_menu_aiogram
        await show_admin_main_menu_aiogram(callback_query, state)
        return # –ü—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ö—ç–Ω–¥–ª–µ—Ä–∞

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ –ë–î
    # –í–∞–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–æ–¥–∏—Ç–µ–ª—è, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å, –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è
    # db.get_category_by_id –¥–æ–ª–∂–µ–Ω –ø–æ–∑–≤–æ–ª—è—Ç—å lazy loading parent
    category = db.get_category_by_id(category_id)
    if not category:
        logger.error(f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è —Å ID {category_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.")
        await _send_or_edit_message(callback_query, "‚ùå –û—à–∏–±–∫–∞: –ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.")
        await state.clear()
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        from ..admin_handlers_aiogram import show_admin_main_menu_aiogram
        await show_admin_main_menu_aiogram(callback_query, state)
        return

    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º FSM –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –Ω–æ–≤–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞ (–µ—Å–ª–∏ –Ω–µ –±—ã–ª —Å–±—Ä–æ—à–µ–Ω —Ä–∞–Ω–µ–µ)
    await state.clear() # –°–±—Ä–æ—Å –≤ –Ω–∞—á–∞–ª–µ FSM –¥–∏–∞–ª–æ–≥–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –∏ ID –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ FSM
    await state.update_data(
        updating_category_id=category.id,
        original_name=category.name,
        original_parent_id=category.parent_id,
        original_parent_name=category.parent.name if category.parent else "–ù–µ—Ç"
    )

    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø–µ—Ä–≤–æ–º—É —à–∞–≥—É: –∑–∞–ø—Ä–æ—Å –Ω–æ–≤–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è
    await state.set_state(CategoryUpdateFSM.waiting_for_name)
    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –æ—Ç–∫—É–¥–∞ –ø—Ä–∏—à–µ–ª –∫–æ–ª–±—ç–∫ (–¥–µ—Ç–∞–ª–∏)
    # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º —Ç–µ–∫—É—â–µ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è MarkdownV2
    original_name_esc = types.utils.markdown.text_decorations.escape_markdown(category.name)

    await _send_or_edit_message(
        callback_query,
        f"üìù **–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏** (ID: `{category.id}`)\n\n"
        f"–¢–µ–∫—É—â–µ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: `{original_name_esc}`\n\n"
        f"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–ª–∏ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–µ, –æ—Ç–ø—Ä–∞–≤–∏–≤ `{SKIP_INPUT_MARKER}`.",
        parse_mode="MarkdownV2"
    )

async def process_category_name_update(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (UPDATE FSM)."""
    user_data = await state.get_data()
    original_name = user_data.get("original_name")
    new_name = message.text.strip()

    if new_name == SKIP_INPUT_MARKER:
        new_name = original_name # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º - –æ—Å—Ç–∞–≤–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
        # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è MarkdownV2
        original_name_esc = types.utils.markdown.text_decorations.escape_markdown(original_name)
        await message.answer(f"–ù–∞–∑–≤–∞–Ω–∏–µ –æ—Å—Ç–∞–≤–ª–µ–Ω–æ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π: `{original_name_esc}`.", parse_mode="MarkdownV2")
    elif not new_name:
         await message.answer("–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º. –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ `-` –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞ –∏–ª–∏ '–û—Ç–º–µ–Ω–∞'.")
         # –û—Å—Ç–∞–µ–º—Å—è –≤ —Ç–µ–∫—É—â–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏
         return
    else:
        # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è MarkdownV2
        new_name_esc = types.utils.markdown.text_decorations.escape_markdown(new_name)
        await message.answer(f"–ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: `{new_name_esc}`", parse_mode="MarkdownV2")


    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ (–∏–ª–∏ —Å—Ç–∞—Ä–æ–µ, –µ—Å–ª–∏ –ø—Ä–æ–ø—É—â–µ–Ω–æ)
    await state.update_data(new_name=new_name)


    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É: —Ä–µ—à–µ–Ω–∏–µ –ø–æ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    keyboard = [
        [types.InlineKeyboardButton(text="‚úÖ –ò–∑–º–µ–Ω–∏—Ç—å / –£–¥–∞–ª–∏—Ç—å", callback_data="update_cat_parent_decision_yes")], # –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–æ–ª–±—ç–∫
        [types.InlineKeyboardButton(text="üö´ –û—Å—Ç–∞–≤–∏—Ç—å —Ç–µ–∫—É—â—É—é", callback_data=KEEP_CURRENT_PARENT_CALLBACK)],
        [types.InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data=CANCEL_FSM_CALLBACK)],
    ]
    reply_markup = types.InlineKeyboardMarkup(inline_keyboard=keyboard)

    await state.set_state(CategoryUpdateFSM.waiting_for_parent_decision)
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞ FSM
    # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º —Ç–µ–∫—É—â–µ–µ –∏–º—è —Ä–æ–¥–∏—Ç–µ–ª—è –¥–ª—è MarkdownV2
    original_parent_name_esc = types.utils.markdown.text_decorations.escape_markdown(user_data.get('original_parent_name', '–ù–µ—Ç'))
    await message.answer(
        f"–¢–µ–∫—É—â–∞—è —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è: `{original_parent_name_esc}`\n\n"
        "–•–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é?",
        reply_markup=reply_markup,
        parse_mode="MarkdownV2"
    )


async def process_parent_update_decision(callback_query: types.CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ä–µ—à–µ–Ω–∏–µ –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (UPDATE FSM)."""
    await callback_query.answer()
    decision = callback_query.data
    user_data = await state.get_data()
    updating_category_id = user_data.get("updating_category_id")

    if decision == KEEP_CURRENT_PARENT_CALLBACK:
        # –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
        # new_parent_id —É–∂–µ None –∏–ª–∏ original_parent_id, –µ—Å–ª–∏ –Ω–µ –±—ã–ª –∏–∑–º–µ–Ω–µ–Ω
        await state.update_data(
            new_parent_id=user_data.get("original_parent_id"),
            new_parent_name=user_data.get("original_parent_name")
        )
        await show_category_update_confirm(callback_query, state) # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—é
    elif decision == "update_cat_parent_decision_yes": # –ù–∞–∂–∞—Ç–∞ "–ò–∑–º–µ–Ω–∏—Ç—å / –£–¥–∞–ª–∏—Ç—å"
        # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤—ã–±—Ä–∞—Ç—å –Ω–æ–≤—É—é –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å
        all_categories = db.get_all_categories()
        # TODO: –§–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—É—â—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏ –µ–µ –¥–µ—Ç–µ–π –∏–∑ —Å–ø–∏—Å–∫–∞ –≤—ã–±–æ—Ä–∞, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ü–∏–∫–ª–æ–≤.
        # –ü–æ–∫–∞ —Ñ–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Å–∞–º—É –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–∑ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–æ–¥–∏—Ç–µ–ª–µ–º.
        # –í —Ä–µ–∞–ª—å–Ω–æ–π –∏–µ—Ä–∞—Ä—Ö–∏–∏ –º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω–∞—è –ª–æ–≥–∏–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏.
        available_categories = [c for c in all_categories if c.id != updating_category_id]

        # –ö–Ω–æ–ø–∫–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ä–æ–¥–∏—Ç–µ–ª—è –∏ –æ—Ç–º–µ–Ω—ã
        extra_buttons = [
            [types.InlineKeyboardButton(text="üö´ –£–¥–∞–ª–∏—Ç—å —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é", callback_data="update_cat_remove_parent")], # –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–æ–ª–±—ç–∫
            [types.InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data=CANCEL_FSM_CALLBACK)],
        ]

        if available_categories:
            # –•—Ä–∞–Ω–∏–º —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏ —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
            await state.update_data(available_parent_categories_update=available_categories, parent_page_update=0)

            await state.set_state(CategoryUpdateFSM.waiting_for_parent_selection)
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º/—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å–ø–∏—Å–∫–∞
            await show_parent_category_update_selection(callback_query, state, extra_buttons=extra_buttons) # –ü–µ—Ä–µ–¥–∞–µ–º target –∏ state
        else:
             # –ù–µ—Ç –¥—Ä—É–≥–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è –≤—ã–±–æ—Ä–∞, –∫—Ä–æ–º–µ —Å–∞–º–æ–π —Å–µ–±—è (–∫–æ—Ç–æ—Ä—É—é –∏—Å–∫–ª—é—á–∏–ª–∏)
             await state.update_data(new_parent_id=None, new_parent_name="–ù–µ—Ç (–Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π)")
             await callback_query.message.edit_text(
                "‚ÑπÔ∏è –í —Å–∏—Å—Ç–µ–º–µ –Ω–µ—Ç –¥—Ä—É–≥–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π, –∫—Ä–æ–º–µ —Ç–µ–∫—É—â–µ–π.\n"
                "–ö–∞—Ç–µ–≥–æ—Ä–∏—è –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –±–µ–∑ —Ä–æ–¥–∏—Ç–µ–ª—è." # –£–±—Ä–∞–ª "–í—ã –º–æ–∂–µ—Ç–µ –ª–∏–±–æ —É–¥–∞–ª–∏—Ç—å...", —Ç.–∫. –∫–Ω–æ–ø–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è –Ω–µ—Ç –Ω–∞ —ç—Ç–æ–º —à–∞–≥–µ
             )
             # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—é
             await show_category_update_confirm(callback_query, state)

    elif decision == "update_cat_remove_parent": # –û–±—Ä–∞–±–æ—Ç–∫–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –∫–æ–ª–±—ç–∫–∞ "–£–¥–∞–ª–∏—Ç—å —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é" (–ø—Ä–∏—Ö–æ–¥–∏—Ç –∏–∑ waiting_for_parent_selection –∏–ª–∏ waiting_for_parent_decision)
         # –£–¥–∞–ª—è–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
         await state.update_data(new_parent_id=None, new_parent_name="–ù–µ—Ç")
         await show_category_update_confirm(callback_query, state) # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—é
    else:
        await callback_query.message.answer("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ. –í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã.")
        # –û—Å—Ç–∞–µ–º—Å—è –≤ —Ç–µ–∫—É—â–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏, –º–æ–∂–Ω–æ –ø–æ–≤—Ç–æ—Ä–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ —Ä–µ—à–µ–Ω–∏—è
        user_data = await state.get_data()
        keyboard = [
            [types.InlineKeyboardButton(text="‚úÖ –ò–∑–º–µ–Ω–∏—Ç—å / –£–¥–∞–ª–∏—Ç—å", callback_data="update_cat_parent_decision_yes")],
            [types.InlineKeyboardButton(text="üö´ –û—Å—Ç–∞–≤–∏—Ç—å —Ç–µ–∫—É—â—É—é", callback_data=KEEP_CURRENT_PARENT_CALLBACK)],
            [types.InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data=CANCEL_FSM_CALLBACK)],
        ]
        reply_markup = types.InlineKeyboardMarkup(inline_keyboard=keyboard)
        # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –∏–º—è —Ä–æ–¥–∏—Ç–µ–ª—è
        original_parent_name_esc = types.utils.markdown.text_decorations.escape_markdown(user_data.get('original_parent_name', '–ù–µ—Ç'))
        await callback_query.message.edit_text(
             f"–¢–µ–∫—É—â–∞—è —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è: `{original_parent_name_esc}`\n\n"
             "–•–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é?\n*–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏.*",
             reply_markup=reply_markup,
             parse_mode="MarkdownV2"
        )


async def show_parent_category_update_selection(target: Union[types.Message, types.CallbackQuery], state: FSMContext, extra_buttons: Optional[List[List[types.InlineKeyboardButton]]] = None):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–æ–≤–æ–π —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π (UPDATE FSM)."""
    user_data = await state.get_data()
    # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏–∑ state (–æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –≤ process_parent_category_update_pagination)
    categories = user_data.get("available_parent_categories_update", [])
    current_page = user_data.get("parent_page_update", 0)

    if not categories:
         # –≠—Ç–æ—Ç —Å–ª—É—á–∞–π –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–±—Ä–∞–±–æ—Ç–∞–Ω –¥–æ –≤—ã–∑–æ–≤–∞ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏, –Ω–æ –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
         text = "‚ÑπÔ∏è –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è –≤—ã–±–æ—Ä–∞."
         # –ö–Ω–æ–ø–∫–∞ "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å" (–±–µ–∑ —Ä–æ–¥–∏—Ç–µ–ª—è)
         keyboard = [[types.InlineKeyboardButton(text="‚úÖ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –±–µ–∑ —Ä–æ–¥–∏—Ç–µ–ª—è", callback_data="update_cat_continue_no_parent")]] # –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–æ–ª–±—ç–∫
         # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è —Ä–æ–¥–∏—Ç–µ–ª—è –∏ –æ—Ç–º–µ–Ω—ã, –µ—Å–ª–∏ –æ–Ω–∏ –±—ã–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω—ã
         if extra_buttons:
              keyboard.extend(extra_buttons)
         reply_markup = types.InlineKeyboardMarkup(inline_keyboard=keyboard)

         # –ü–µ—Ä–µ–π—Ç–∏ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å parent_id=None?
         await state.update_data(new_parent_id=None, new_parent_name="–ù–µ—Ç (–Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π)")
         await state.set_state(CategoryUpdateFSM.confirm_update) # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—é

         await _send_or_edit_message(target, text, reply_markup=reply_markup, parse_mode="MarkdownV2")
         return

    # Helper function to format item text for the button
    def format_category_button_text(category: db.Category) -> str:
         # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –∏–º—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
         return f"üìÇ {types.utils.markdown.text_decorations.escape_markdown(category.name)}"

    reply_markup = generate_pagination_keyboard(
        items=categories,
        current_page=current_page,
        page_size=CATEGORY_PAGE_SIZE_UPDATE,
        select_callback_prefix=UPDATE_CAT_PARENT_SEL_PREFIX,
        pagination_callback_prefix=f"{PAGINATION_CALLBACK_PREFIX}{UPDATE_CAT_PARENT_PAGE_PREFIX.strip(':')}:",
        item_text_func=format_category_button_text,
        item_id_func=lambda c: c.id,
        extra_buttons=extra_buttons, # –ü–µ—Ä–µ–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ "–£–¥–∞–ª–∏—Ç—å —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é" –∏ "–û—Ç–º–µ–Ω–∞"
        cancel_callback=CANCEL_FSM_CALLBACK # –£–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–ª–±—ç–∫ –æ—Ç–º–µ–Ω—ã
    )

    text = f"–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤—É—é —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é (—Å—Ç—Ä–∞–Ω–∏—Ü–∞ {current_page + 1}):"

    await _send_or_edit_message(target, text, reply_markup=reply_markup, parse_mode="MarkdownV2")


async def process_parent_category_update_selection(callback_query: types.CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –Ω–æ–≤–æ–π —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (UPDATE FSM)."""
    await callback_query.answer()
    data = callback_query.data
    # –û–∂–∏–¥–∞–µ–º —Ñ–æ—Ä–º–∞—Ç: {prefix}{id} -> "upd_cat_par_sel:123"
    try:
        action, category_id_str = data.split(":")
        category_id = int(category_id_str)
        # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ callback data —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø—Ä–µ—Ñ–∏–∫—Å—É –≤—ã–±–æ—Ä–∞ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        if not data.startswith(UPDATE_CAT_PARENT_SEL_PREFIX):
            raise ValueError("Invalid callback prefix")
    except ValueError:
        logger.error(f"–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç callback_data –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ update FSM: {data}")
        await callback_query.message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.")
        # –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–Ω–æ–≤–æ —Å –∫–Ω–æ–ø–∫–∞–º–∏ —É–¥–∞–ª–µ–Ω–∏—è/–æ—Ç–º–µ–Ω—ã
        extra_buttons = [
             [types.InlineKeyboardButton(text="üö´ –£–¥–∞–ª–∏—Ç—å —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é", callback_data="update_cat_remove_parent")],
             [types.InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data=CANCEL_FSM_CALLBACK)],
        ]
        await show_parent_category_update_selection(callback_query, state, extra_buttons=extra_buttons)
        return


    selected_category = db.get_category_by_id(category_id)
    if not selected_category:
        await callback_query.message.answer("–í—ã–±—Ä–∞–Ω–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
        extra_buttons = [
             [types.InlineKeyboardButton(text="üö´ –£–¥–∞–ª–∏—Ç—å —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é", callback_data="update_cat_remove_parent")],
             [types.InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data=CANCEL_FSM_CALLBACK)],
        ]
        await show_parent_category_update_selection(callback_query, state, extra_buttons=extra_buttons) # –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–Ω–æ–≤–æ
        return

    await state.update_data(new_parent_id=category_id, new_parent_name=selected_category.name)
    # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –∏–º—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    selected_category_name_esc = types.utils.markdown.text_decorations.escape_markdown(selected_category.name)
    await callback_query.message.edit_text(f"–í—ã–±—Ä–∞–Ω–∞ –Ω–æ–≤–∞—è —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è: `{selected_category_name_esc}`.", parse_mode="MarkdownV2")

    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—é
    await show_category_update_confirm(callback_query, state)


async def process_parent_category_update_pagination(callback_query: types.CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–æ–∫ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (UPDATE FSM)."""
    await callback_query.answer()
    data = callback_query.data
    # –û–∂–∏–¥–∞–µ–º —Ñ–æ—Ä–º–∞—Ç: "page:{entity_prefix}:{page_number}" -> "page:upd_cat_par:{page_number}"
    parts = data.split(":")
    if len(parts) != 3 or parts[0] != PAGINATION_CALLBACK_PREFIX.strip(':') or parts[1] != UPDATE_CAT_PARENT_PAGE_PREFIX.strip(':'):
        logger.error(f"–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç callback_data –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ —Ä–æ–¥–∏—Ç–µ–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ update FSM: {data}")
        await callback_query.message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏.")
        # –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫ —Å–Ω–æ–≤–∞
        extra_buttons = [
             [types.InlineKeyboardButton(text="üö´ –£–¥–∞–ª–∏—Ç—å —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é", callback_data="update_cat_remove_parent")],
             [types.InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data=CANCEL_FSM_CALLBACK)],
        ]
        await show_parent_category_update_selection(callback_query, state, extra_buttons=extra_buttons)
        return

    try:
        new_page = int(parts[2])
    except ValueError:
        logger.error(f"–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤ callback_data –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ —Ä–æ–¥–∏—Ç–µ–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ update FSM: {data}")
        await callback_query.message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ (–Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã).")
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫ —Å–Ω–æ–≤–∞
        extra_buttons = [
             [types.InlineKeyboardButton(text="üö´ –£–¥–∞–ª–∏—Ç—å —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é", callback_data="update_cat_remove_parent")],
             [types.InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data=CANCEL_FSM_CALLBACK)],
        ]
        await show_parent_category_update_selection(callback_query, state, extra_buttons=extra_buttons)
        return


    user_data = await state.get_data()
    # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏–∑ –ë–î –Ω–∞ —ç—Ç–æ–º —à–∞–≥–µ, —á—Ç–æ–±—ã –æ–±–Ω–æ–≤–∏—Ç—å state.available_parent_categories_update
    all_categories = db.get_all_categories()
    updating_category_id = user_data.get("updating_category_id")
    categories = [c for c in all_categories if c.id != updating_category_id] # –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–µ–∫—É—â—É—é

    total_pages = math.ceil(len(categories) / CATEGORY_PAGE_SIZE_UPDATE)

    if 0 <= new_page < total_pages:
        await state.update_data(available_parent_categories_update=categories, parent_page_update=new_page) # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∏ —Å—Ç—Ä–∞–Ω–∏—Ü—É
        extra_buttons = [
             [types.InlineKeyboardButton(text="üö´ –£–¥–∞–ª–∏—Ç—å —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é", callback_data="update_cat_remove_parent")],
             [types.InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data=CANCEL_FSM_CALLBACK)],
        ]
        await show_parent_category_update_selection(callback_query, state, extra_buttons=extra_buttons)
    else:
        await callback_query.answer("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã.")


async def show_category_update_confirm(target: Union[types.Message, types.CallbackQuery], state: FSMContext):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (UPDATE FSM)."""
    user_data = await state.get_data()
    category_id = user_data.get("updating_category_id")
    original_name = user_data.get("original_name")
    original_parent_name = user_data.get("original_parent_name", "–ù–µ—Ç")

    new_name = user_data.get("new_name") # –ü–æ–ª—É—á–µ–Ω–æ –∏–∑ FSM state
    new_parent_name = user_data.get("new_parent_name", "–ù–µ—Ç") # –ü–æ–ª—É—á–µ–Ω–æ –∏–∑ FSM state


    text = f"‚ú® **–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ö–∞—Ç–µ–≥–æ—Ä–∏–∏** (ID: `{category_id}`) ‚ú®\n\n"

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è, —ç–∫—Ä–∞–Ω–∏—Ä—É—è –¥–ª—è MarkdownV2
    original_name_esc = types.utils.markdown.text_decorations.escape_markdown(original_name)
    new_name_esc = types.utils.markdown.text_decorations.escape_markdown(new_name)
    if new_name != original_name:
        text += f"**–ù–∞–∑–≤–∞–Ω–∏–µ:** ~~`{original_name_esc}`~~ ‚Üí `{new_name_esc}`\n"
    else:
        text += f"**–ù–∞–∑–≤–∞–Ω–∏–µ:** `{original_name_esc}` (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)\n"

    original_parent_name_esc = types.utils.markdown.text_decorations.escape_markdown(original_parent_name)
    new_parent_name_esc = types.utils.markdown.text_decorations.escape_markdown(new_parent_name)
    if new_parent_name != original_parent_name:
        text += f"**–†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è:** ~~`{original_parent_name_esc}`~~ ‚Üí `{new_parent_name_esc}`\n"
    else:
        text += f"**–†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è:** `{original_parent_name_esc}` (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)\n"


    text += "\n–í—Å–µ –≤–µ—Ä–Ω–æ? –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∏–ª–∏ –æ—Ç–º–µ–Ω–∏—Ç–µ."

    keyboard = [
        [types.InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ", callback_data=CONFIRM_ACTION_CALLBACK)],
        [types.InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data=CANCEL_FSM_CALLBACK)],
    ]
    reply_markup = types.InlineKeyboardMarkup(inline_keyboard=keyboard)

    await _send_or_edit_message(target, text, reply_markup=reply_markup, parse_mode="MarkdownV2")

    await state.set_state(CategoryUpdateFSM.confirm_update)


async def process_category_update_confirm(callback_query: types.CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (UPDATE FSM)."""
    await callback_query.answer()
    user_data = await state.get_data()
    category_id = user_data.get("updating_category_id")
    new_name = user_data.get("new_name")
    new_parent_id = user_data.get("new_parent_id") # –ü–æ–ª—É—á–µ–Ω–æ –∏–∑ FSM state

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    update_data = {
        "name": new_name,
        "parent_id": new_parent_id
    }

    # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∑ utils/db.py
    updated_category = db.update_category(category_id, update_data)

    if updated_category:
        # –ü–æ–ª—É—á–∞–µ–º –∏–º—è —Ä–æ–¥–∏—Ç–µ–ª—è –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        updated_parent_name = updated_category.parent.name if updated_category.parent else '–ù–µ—Ç'
        # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –∏–º–µ–Ω–∞ –¥–ª—è MarkdownV2
        updated_name_esc = types.utils.markdown.text_decorations.escape_markdown(updated_category.name)
        updated_parent_name_esc = types.utils.markdown.text_decorations.escape_markdown(updated_parent_name)

        await callback_query.message.edit_text(
            f"üéâ **–ö–∞—Ç–µ–≥–æ—Ä–∏—è (ID: `{category_id}`) —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!** üéâ"
            f"\n–ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: `{updated_name_esc}`"
            f"\n–ù–æ–≤–∞—è —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è: `{updated_parent_name_esc}`",
            parse_mode="MarkdownV2"
        )
    else:
        # TODO: –î–æ–±–∞–≤–∏—Ç—å –±–æ–ª–µ–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –æ—à–∏–±–∫—É –∏–∑ db.update_category, –µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ (IntegrityError)
        await callback_query.message.edit_text(
            f"‚ùå **–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (ID: `{category_id}`).**\n"
            "–í–æ–∑–º–æ–∂–Ω–æ, –∫–∞—Ç–µ–≥–æ—Ä–∏—è —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –¥—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞."
        )

    await state.clear() # –ó–∞–≤–µ—Ä—à–∞–µ–º FSM
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –∞–¥–º–∏–Ω-–º–µ–Ω—é
    from ..admin_handlers_aiogram import show_admin_main_menu_aiogram
    await show_admin_main_menu_aiogram(callback_query, state)

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –û—Ç–¥–µ–ª—å–Ω—ã–π —Ö—ç–Ω–¥–ª–µ—Ä cancel_update_category –Ω–µ –Ω—É–∂–µ–Ω,
# –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –æ–±—â–∏–π cancel_fsm_handler, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –Ω–∞ State("*")


# --- Router Registration ---
# –°–æ–∑–¥–∞–µ–º —Ä–æ—É—Ç–µ—Ä —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è FSM –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
category_update_fsm_router = Router(name="category_update_fsm_router")

def register_category_update_handlers(router: Router):
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ FSM –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏."""

    # ENTRY POINT: –ó–∞–ø—É—Å–∫ FSM –ø–æ –∫–æ–ª–±—ç–∫—É "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å" –∏–∑ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º F.data.startswith –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –ø—Ä–µ—Ñ–∏–∫—Å—É –∏–Ω–∏—Ü–∏–∞—Ü–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    router.callback_query.register(
        start_category_update,
        F.data.startswith(CATEGORY_UPDATE_INIT_CALLBACK_PREFIX)
        # –ë–µ–∑ —Ñ–∏–ª—å—Ç—Ä–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π, —Ç.–∫. —ç—Ç–æ –≤—Ö–æ–¥ –≤ FSM
    )

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —à–∞–≥–æ–≤ FSM
    router.message.register(process_category_name_update, CategoryUpdateFSM.waiting_for_name)

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ—à–µ–Ω–∏—è –ø–æ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–∫–Ω–æ–ø–∫–∏ "–ò–∑–º–µ–Ω–∏—Ç—å/–£–¥–∞–ª–∏—Ç—å", "–û—Å—Ç–∞–≤–∏—Ç—å —Ç–µ–∫—É—â—É—é")
    router.callback_query.register(
        process_parent_update_decision,
        CategoryUpdateFSM.waiting_for_parent_decision,
        F.data.in_(["update_cat_parent_decision_yes", KEEP_CURRENT_PARENT_CALLBACK])
    )
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–£–¥–∞–ª–∏—Ç—å —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é" (–º–æ–∂–µ—Ç –±—ã—Ç—å –∫–∞–∫ –Ω–∞ —à–∞–≥–µ —Ä–µ—à–µ–Ω–∏—è, —Ç–∞–∫ –∏ –Ω–∞ —à–∞–≥–µ –≤—ã–±–æ—Ä–∞)
    router.callback_query.register(
        process_parent_update_decision, # –ü–æ–≤—Ç–æ—Ä–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ—à–µ–Ω–∏—è
        StateFilter(CategoryUpdateFSM.waiting_for_parent_decision, CategoryUpdateFSM.waiting_for_parent_selection),
        F.data == "update_cat_remove_parent"
    )
     # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –±–µ–∑ —Ä–æ–¥–∏—Ç–µ–ª—è" –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è –≤—ã–±–æ—Ä–∞
    router.callback_query.register(
         show_category_update_confirm, # –ü–µ—Ä–µ—Ö–æ–¥–∏–º —Å—Ä–∞–∑—É –∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—é
         CategoryUpdateFSM.waiting_for_parent_selection,
         F.data == "update_cat_continue_no_parent"
    )

    # –•—ç–Ω–¥–ª–µ—Ä—ã –≤—ã–±–æ—Ä–∞ –∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–æ–∂–∏–¥–∞—é—Ç –∫–æ–ª–±—ç–∫ —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –∏ –ø—Ä–µ—Ñ–∏–∫—Å–æ–º)
    router.callback_query.register(
        process_parent_category_update_selection,
        CategoryUpdateFSM.waiting_for_parent_selection,
        F.data.startswith(UPDATE_CAT_PARENT_SEL_PREFIX) # –í—ã–±–æ—Ä —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    )
    router.callback_query.register(
        process_parent_category_update_pagination,
        CategoryUpdateFSM.waiting_for_parent_selection,
        F.data.startswith(f"{PAGINATION_CALLBACK_PREFIX}{UPDATE_CAT_PARENT_PAGE_PREFIX.strip(':')}:") # –ü–∞–≥–∏–Ω–∞—Ü–∏—è —Å–ø–∏—Å–∫–∞ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    )

    # –•—ç–Ω–¥–ª–µ—Ä –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è (–æ–∂–∏–¥–∞–µ—Ç –∫–æ–ª–±—ç–∫ —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –∏ –∫–æ–ª–±—ç–∫–æ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è)
    router.callback_query.register(
        process_category_update_confirm,
        CategoryUpdateFSM.confirm_update,
        F.data == CONFIRM_ACTION_CALLBACK
    )

    # –û–±—â–∏–π —Ö—ç–Ω–¥–ª–µ—Ä –æ—Ç–º–µ–Ω—ã –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –æ—Ç–¥–µ–ª—å–Ω–æ, –Ω–∞ –±–æ–ª–µ–µ –≤—ã—Å–æ–∫–æ–º —É—Ä–æ–≤–Ω–µ —Ä–æ—É—Ç–µ—Ä–∞ –∏–ª–∏ –¥–∏—Å–ø–∞—Ç—á–µ—Ä–∞
    # –ù–∞–ø—Ä–∏–º–µ—Ä, –Ω–∞ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–º admin_router –∏–ª–∏ –≥–ª–∞–≤–Ω–æ–º dp —Å —Ñ–∏–ª—å—Ç—Ä–æ–º State("*") –∏ Text(CANCEL_FSM_CALLBACK).
    # router.callback_query.register(cancel_fsm_handler, Text(CANCEL_FSM_CALLBACK), State("*"))

# –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –¥–ª—è —ç—Ç–æ–≥–æ —Ä–æ—É—Ç–µ—Ä–∞
register_category_update_handlers(category_update_fsm_router)

# –†–æ—É—Ç–µ—Ä category_update_fsm_router —Ç–µ–ø–µ—Ä—å —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏ –≥–æ—Ç–æ–≤ –∫ –≤–∫–ª—é—á–µ–Ω–∏—é –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –¥–∏—Å–ø–∞—Ç—á–µ—Ä/—Ä–æ—É—Ç–µ—Ä.
