# your_bot/handlers/fsm/manufacturer_update_fsm.py
# FSM –¥–∏–∞–ª–æ–≥ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è

import logging
from aiogram import types, F, Router
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

from typing import Union

# –ò–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π —Ä–∞–±–æ—Ç—ã —Å –ë–î
# –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –∏–º–ø–æ—Ä—Ç
from utils import db

# –ò–º–ø–æ—Ä—Ç –æ–±—â–∏—Ö FSM —É—Ç–∏–ª–∏—Ç –∏ –∫–æ–Ω—Å—Ç–∞–Ω—Ç
from .fsm_utils import CANCEL_FSM_CALLBACK, CONFIRM_ACTION_CALLBACK, SKIP_INPUT_MARKER
# –ò–º–ø–æ—Ä—Ç –∞–¥–º–∏–Ω—Å–∫–∏—Ö –∫–æ–Ω—Å—Ç–∞–Ω—Ç
from ..admin_constants_aiogram import MANUFACTURER_UPDATE_INIT_CALLBACK_PREFIX

# –ò–º–ø–æ—Ä—Ç —Ö–µ–ª–ø–µ—Ä–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏/—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ admin_list_detail_handlers_aiogram
# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ü–∏–∫–ª–∏—á–µ—Å–∫–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞ –Ω–∞ —É—Ä–æ–≤–Ω–µ –º–æ–¥—É–ª—è
from ..admin_list_detail_handlers_aiogram import _send_or_edit_message

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logger = logging.getLogger(__name__)


# --- FSM States ---
class ManufacturerUpdateFSM(StatesGroup):
    """–°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –¥–∏–∞–ª–æ–≥–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è."""
    waiting_for_name = State()
    # Note: Ignoring 'contact_info' as per provided DB schema
    confirm_update = State()

# --- Handlers ---
async def start_manufacturer_update(callback_query: types.CallbackQuery, state: FSMContext):
    """–ù–∞—á–∏–Ω–∞–µ—Ç –¥–∏–∞–ª–æ–≥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è."""
    await callback_query.answer()

    # –ü–∞—Ä—Å–∏–º ID –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è –∏–∑ callback_data
    try:
        # –û–∂–∏–¥–∞–µ—Ç—Å—è —Ñ–æ—Ä–º–∞—Ç callback_data: {–ø—Ä–µ—Ñ–∏–∫—Å_–∏–Ω–∏—Ü–∏–∞—Ü–∏–∏_–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è}{id}
        manufacturer_id_str = callback_query.data.replace(MANUFACTURER_UPDATE_INIT_CALLBACK_PREFIX, "")
        manufacturer_id = int(manufacturer_id_str)
    except ValueError:
        logger.error(f"–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è –≤ –∫–æ–ª–±—ç–∫–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {callback_query.data}")
        await _send_or_edit_message(callback_query, "‚ùå –û—à–∏–±–∫–∞: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.")
        await state.clear()
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        from ..admin_handlers_aiogram import show_admin_main_menu_aiogram
        await show_admin_main_menu_aiogram(callback_query, state)
        return

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è –∏–∑ –ë–î
    manufacturer = db.get_manufacturer_by_id(manufacturer_id)
    if not manufacturer:
        logger.error(f"–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å —Å ID {manufacturer_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.")
        await _send_or_edit_message(callback_query, "‚ùå –û—à–∏–±–∫–∞: –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.")
        await state.clear()
        from ..admin_handlers_aiogram import show_admin_main_menu_aiogram
        await show_admin_main_menu_aiogram(callback_query, state)
        return

    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º FSM –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –Ω–æ–≤–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞ (–µ—Å–ª–∏ –Ω–µ –±—ã–ª —Å–±—Ä–æ—à–µ–Ω —Ä–∞–Ω–µ–µ)
    await state.clear() # –°–±—Ä–æ—Å –≤ –Ω–∞—á–∞–ª–µ FSM –¥–∏–∞–ª–æ–≥–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è


    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –∏ ID –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ FSM
    await state.update_data(
        updating_manufacturer_id=manufacturer.id,
        original_name=manufacturer.name
    )

    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø–µ—Ä–≤–æ–º—É —à–∞–≥—É: –∑–∞–ø—Ä–æ—Å –Ω–æ–≤–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è
    await state.set_state(ManufacturerUpdateFSM.waiting_for_name)
    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –æ—Ç–∫—É–¥–∞ –ø—Ä–∏—à–µ–ª –∫–æ–ª–±—ç–∫ (–¥–µ—Ç–∞–ª–∏)
    # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º —Ç–µ–∫—É—â–µ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è MarkdownV2
    original_name_esc = types.utils.markdown.text_decorations.escape_markdown(manufacturer.name)

    await _send_or_edit_message(
        callback_query,
        f"üìù **–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è** (ID: `{manufacturer.id}`)\n\n"
        f"–¢–µ–∫—É—â–µ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: `{original_name_esc}`\n\n"
        f"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è –∏–ª–∏ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–µ, –æ—Ç–ø—Ä–∞–≤–∏–≤ `{SKIP_INPUT_MARKER}`.",
        parse_mode="MarkdownV2"
    )

async def process_manufacturer_name_update(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è (UPDATE FSM)."""
    user_data = await state.get_data()
    original_name = user_data.get("original_name")
    new_name = message.text.strip()

    if new_name == SKIP_INPUT_MARKER:
        new_name = original_name # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º - –æ—Å—Ç–∞–≤–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
        # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è MarkdownV2
        original_name_esc = types.utils.markdown.text_decorations.escape_markdown(original_name)
        await message.answer(f"–ù–∞–∑–≤–∞–Ω–∏–µ –æ—Å—Ç–∞–≤–ª–µ–Ω–æ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π: `{original_name_esc}`.", parse_mode="MarkdownV2")
    elif not new_name:
         await message.answer("–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º. –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ `-` –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞ –∏–ª–∏ '–û—Ç–º–µ–Ω–∞'.")
         # –û—Å—Ç–∞–µ–º—Å—è –≤ —Ç–µ–∫—É—â–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏
         return
    else:
        # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è MarkdownV2
        new_name_esc = types.utils.markdown.text_decorations.escape_markdown(new_name)
        await message.answer(f"–ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: `{new_name_esc}`", parse_mode="MarkdownV2")


    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ (–∏–ª–∏ —Å—Ç–∞—Ä–æ–µ, –µ—Å–ª–∏ –ø—Ä–æ–ø—É—â–µ–Ω–æ)
    await state.update_data(new_name=new_name)

    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—é
    await show_manufacturer_update_confirm(message, state) # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º


async def show_manufacturer_update_confirm(target: types.Message, state: FSMContext):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è (UPDATE FSM)."""
    user_data = await state.get_data()
    manufacturer_id = user_data.get("updating_manufacturer_id")
    original_name = user_data.get("original_name")
    new_name = user_data.get("new_name") # –ü–æ–ª—É—á–µ–Ω–æ –∏–∑ FSM state

    text = f"‚ú® **–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è** (ID: `{manufacturer_id}`) ‚ú®\n\n"

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è, —ç–∫—Ä–∞–Ω–∏—Ä—É—è –¥–ª—è MarkdownV2
    original_name_esc = types.utils.markdown.text_decorations.escape_markdown(original_name)
    new_name_esc = types.utils.markdown.text_decorations.escape_markdown(new_name)
    if new_name != original_name:
        text += f"**–ù–∞–∑–≤–∞–Ω–∏–µ:** ~~`{original_name_esc}`~~ ‚Üí `{new_name_esc}`\n"
    else:
        text += f"**–ù–∞–∑–≤–∞–Ω–∏–µ:** `{original_name_esc}` (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)\n"

    text += "\n–í—Å–µ –≤–µ—Ä–Ω–æ? –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∏–ª–∏ –æ—Ç–º–µ–Ω–∏—Ç–µ."

    keyboard = [
        [types.InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ", callback_data=CONFIRM_ACTION_CALLBACK)],
        [types.InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data=CANCEL_FSM_CALLBACK)],
    ]
    reply_markup = types.InlineKeyboardMarkup(inline_keyboard=keyboard)

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º target.answer, —Ç.–∫. –ø—Ä–µ–¥—ã–¥—É—â–∏–π —à–∞–≥ –±—ã–ª message.register
    await target.answer(text, reply_markup=reply_markup, parse_mode="MarkdownV2")
    await state.set_state(ManufacturerUpdateFSM.confirm_update)


async def process_manufacturer_update_confirm(callback_query: types.CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è (UPDATE FSM)."""
    await callback_query.answer()
    user_data = await state.get_data()
    manufacturer_id = user_data.get("updating_manufacturer_id")
    new_name = user_data.get("new_name") # –ü–æ–ª—É—á–µ–Ω–æ –∏–∑ FSM state

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    update_data = {"name": new_name}

    # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∑ utils/db.py
    updated_manufacturer = db.update_manufacturer(manufacturer_id, update_data)

    if updated_manufacturer:
        # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è MarkdownV2
        updated_name_esc = types.utils.markdown.text_decorations.escape_markdown(updated_manufacturer.name)
        await callback_query.message.edit_text(
            f"üéâ **–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å (ID: `{manufacturer_id}`) —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!** üéâ"
            f"\n–ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: `{updated_name_esc}`",
            parse_mode="MarkdownV2"
        )
    else:
        # TODO: –î–æ–±–∞–≤–∏—Ç—å –±–æ–ª–µ–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –æ—à–∏–±–∫—É –∏–∑ db.update_manufacturer, –µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ (IntegrityError)
        await callback_query.message.edit_text(
            f"‚ùå **–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è (ID: `{manufacturer_id}`).**\n"
            "–í–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –¥—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞."
        )

    await state.clear() # –ó–∞–≤–µ—Ä—à–∞–µ–º FSM
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –∞–¥–º–∏–Ω-–º–µ–Ω—é
    from ..admin_handlers_aiogram import show_admin_main_menu_aiogram
    await show_admin_main_menu_aiogram(callback_query, state)

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –û—Ç–¥–µ–ª—å–Ω—ã–π —Ö—ç–Ω–¥–ª–µ—Ä cancel_update_manufacturer –Ω–µ –Ω—É–∂–µ–Ω,
# –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –æ–±—â–∏–π cancel_fsm_handler, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –Ω–∞ State("*")


# --- Router Registration ---
# –°–æ–∑–¥–∞–µ–º —Ä–æ—É—Ç–µ—Ä —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è FSM –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è
manufacturer_update_fsm_router = Router(name="manufacturer_update_fsm_router")

def register_manufacturer_update_handlers(router: Router):
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ FSM –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è."""

    # ENTRY POINT: –ó–∞–ø—É—Å–∫ FSM –ø–æ –∫–æ–ª–±—ç–∫—É "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å" –∏–∑ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º F.data.startswith –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –ø—Ä–µ—Ñ–∏–∫—Å—É –∏–Ω–∏—Ü–∏–∞—Ü–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è
    router.callback_query.register(
        start_manufacturer_update,
        F.data.startswith(MANUFACTURER_UPDATE_INIT_CALLBACK_PREFIX)
        # –ë–µ–∑ —Ñ–∏–ª—å—Ç—Ä–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π, —Ç.–∫. —ç—Ç–æ –≤—Ö–æ–¥ –≤ FSM
    )

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –Ω–∞–∑–≤–∞–Ω–∏—è (–æ–∂–∏–¥–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–π –≤–≤–æ–¥ —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º)
    router.message.register(process_manufacturer_name_update, ManufacturerUpdateFSM.waiting_for_name)

    # –•—ç–Ω–¥–ª–µ—Ä –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è (–æ–∂–∏–¥–∞–µ—Ç –∫–æ–ª–±—ç–∫ —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –∏ –∫–æ–ª–±—ç–∫–æ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è)
    router.callback_query.register(
        process_manufacturer_update_confirm,
        ManufacturerUpdateFSM.confirm_update,
        F.data == CONFIRM_ACTION_CALLBACK
    )

    # –û–±—â–∏–π —Ö—ç–Ω–¥–ª–µ—Ä –æ—Ç–º–µ–Ω—ã –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –æ—Ç–¥–µ–ª—å–Ω–æ, –Ω–∞ –±–æ–ª–µ–µ –≤—ã—Å–æ–∫–æ–º —É—Ä–æ–≤–Ω–µ —Ä–æ—É—Ç–µ—Ä–∞ –∏–ª–∏ –¥–∏—Å–ø–∞—Ç—á–µ—Ä–∞
    # –ù–∞–ø—Ä–∏–º–µ—Ä, –Ω–∞ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–º admin_router –∏–ª–∏ –≥–ª–∞–≤–Ω–æ–º dp —Å —Ñ–∏–ª—å—Ç—Ä–æ–º State("*") –∏ Text(CANCEL_FSM_CALLBACK).
    # router.callback_query.register(cancel_fsm_handler, Text(CANCEL_FSM_CALLBACK), State("*"))

# –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –¥–ª—è —ç—Ç–æ–≥–æ —Ä–æ—É—Ç–µ—Ä–∞
register_manufacturer_update_handlers(manufacturer_update_fsm_router)

# –†–æ—É—Ç–µ—Ä manufacturer_update_fsm_router —Ç–µ–ø–µ—Ä—å —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏ –≥–æ—Ç–æ–≤ –∫ –≤–∫–ª—é—á–µ–Ω–∏—é –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –¥–∏—Å–ø–∞—Ç—á–µ—Ä/—Ä–æ—É—Ç–µ—Ä.
