# your_bot/handlers/admin_handlers_aiogram.py
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ –º–µ–Ω—é –¥–ª—è aiogram

import logging
from aiogram import types, F, Router
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from typing import Union

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã
from .admin_constants_aiogram import (
    ADMIN_MAIN_CALLBACK,
    ADMIN_PRODUCTS_CALLBACK, ADMIN_STOCK_CALLBACK, ADMIN_CATEGORIES_CALLBACK,
    ADMIN_MANUFACTURERS_CALLBACK, ADMIN_LOCATIONS_CALLBACK, # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ MANUFACTURER_MAIN_MENU_CALLBACK –Ω–∞ ADMIN_MANUFACTURERS_CALLBACK
    ADMIN_BACK_MAIN,
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–µ–π—Å—Ç–≤–∏–π (–î–æ–±–∞–≤–∏—Ç—å, –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫)
    PRODUCT_ADD_CALLBACK, PRODUCT_LIST_CALLBACK,
    STOCK_ADD_CALLBACK, STOCK_LIST_CALLBACK,
    CATEGORY_ADD_CALLBACK, CATEGORY_LIST_CALLBACK,
    MANUFACTURER_ADD_CALLBACK, MANUFACTURER_LIST_CALLBACK,
    LOCATION_ADD_CALLBACK, LOCATION_LIST_CALLBACK,
)

# –ò–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–µ–Ω—é —Å—É—â–Ω–æ—Å—Ç–µ–π
from .admin_entity_menus_aiogram import (
    show_products_menu_aiogram, show_stock_menu_aiogram,
    show_categories_menu_aiogram, show_manufacturers_menu_aiogram,
    show_locations_menu_aiogram,
)

# –ò–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø–∏—Å–∫–æ–≤ –∏–∑ admin_list_detail_handlers_aiogram (–¥–ª—è ENTRY POINTS)
from .admin_list_detail_handlers_aiogram import (
    show_entity_list # –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—â—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –≤—Å–µ—Ö —Å–ø–∏—Å–∫–æ–≤
)
# –ò–º–ø–æ—Ä—Ç —Å—Ç–∞—Ä—Ç–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π FSM –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è (–¥–ª—è ENTRY POINTS)
from .fsm.category_add_fsm import start_category_add
from .fsm.manufacturer_add_fsm import start_manufacturer_add
from .fsm.location_add_fsm import start_location_add
from .fsm.product_add_fsm import start_product_add
from .fsm.stock_add_fsm import start_stock_add

# –ò–º–ø–æ—Ä—Ç —Ö–µ–ª–ø–µ—Ä–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏/—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è (–æ–ø—Ä–µ–¥–µ–ª–µ–Ω –≤ admin_list_detail_handlers_aiogram)
from .admin_list_detail_handlers_aiogram import _send_or_edit_message

# –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à—É —Ä–µ–∞–ª—å–Ω—É—é –ª–æ–≥–∏–∫—É)
# –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –ª—É—á—à–µ –±—Ä–∞—Ç—å ID –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞ –∏–ª–∏ –ë–î
ADMIN_USER_IDS = [6669548787] # <-- –ó–ê–ú–ï–ù–ò–¢–ï –ù–ê –†–ï–ê–õ–¨–ù–´–ï ID –í–ê–®–ò–• –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–û–í

def is_admin(user_id: int) -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º."""
    return user_id in ADMIN_USER_IDS


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
def build_admin_main_keyboard():
    """–°—Ç—Ä–æ–∏—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ –º–µ–Ω—é –¥–ª—è aiogram."""
    keyboard = [
        [types.InlineKeyboardButton(text="üìö –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏", callback_data=ADMIN_PRODUCTS_CALLBACK)],
        [types.InlineKeyboardButton(text="üì¶ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Å—Ç–∞—Ç–∫–∞–º–∏", callback_data=ADMIN_STOCK_CALLBACK)],
        [types.InlineKeyboardButton(text="üìÇ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏", callback_data=ADMIN_CATEGORIES_CALLBACK)],
        [types.InlineKeyboardButton(text="üè≠ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è–º–∏", callback_data=ADMIN_MANUFACTURERS_CALLBACK)],
        [types.InlineKeyboardButton(text="üìç –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è–º–∏", callback_data=ADMIN_LOCATIONS_CALLBACK)],
    ]
    return types.InlineKeyboardMarkup(inline_keyboard=keyboard)

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
async def show_admin_main_menu_aiogram(target: Union[types.Message, types.CallbackQuery], state: FSMContext):
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –≥–ª–∞–≤–Ω–æ–≥–æ –∞–¥–º–∏–Ω-–º–µ–Ω—é.
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –∫–æ–º–∞–Ω–¥—É /admin –∏–ª–∏ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.
    """
    user_id = target.from_user.id
    if not is_admin(user_id):
        if isinstance(target, types.Message):
             await target.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
        elif isinstance(target, types.CallbackQuery):
             await target.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.", show_alert=True)
        return

    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ FSM –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    # –≠—Ç–æ –Ω—É–∂–Ω–æ, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –æ—Å—Ç–∞–ª—Å—è –≤ FSM-–¥–∏–∞–ª–æ–≥–µ –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
    current_state = await state.get_state()
    if current_state:
         logging.info(f"–°–±—Ä–æ—Å FSM –ø—Ä–∏ –ø–æ–∫–∞–∑–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è: {current_state}")
         await state.clear()

    keyboard = build_admin_main_keyboard()
    text = "‚öôÔ∏è **–ì–ª–∞–≤–Ω–æ–µ –∞–¥–º–∏–Ω-–º–µ–Ω—é**\n–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è:"

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ö–µ–ª–ø–µ—Ä –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏/—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    await _send_or_edit_message(target, text, keyboard)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /admin
async def handle_admin_command(message: types.Message, state: FSMContext):
     """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /admin –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –∞–¥–º–∏–Ω-–º–µ–Ω—é."""
     await show_admin_main_menu_aiogram(message, state)


# Callback-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é (–Ω–∞–≤–∏–≥–∞—Ü–∏—è)
# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –æ—Ç–≤–µ—á–∞–µ—Ç —Ç–æ–ª—å–∫–æ –∑–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏—é –ø–æ –ø–æ–¥–º–µ–Ω—é –∏ –≤–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ
async def admin_menu_navigation_handler(callback_query: types.CallbackQuery, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –∞–¥–º–∏–Ω-–º–µ–Ω—é –∏ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" –∏–∑ –ø–æ–¥–º–µ–Ω—é.
    –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –ø–æ–¥–º–µ–Ω—é –∏–ª–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.
    –ù–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç FSM-–¥–∏–∞–ª–æ–≥–∏ (–∏–º–∏ –∑–∞–Ω–∏–º–∞—é—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Ö—ç–Ω–¥–ª–µ—Ä—ã).
    """
    user_id = callback_query.from_user.id
    if not is_admin(user_id):
        await callback_query.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.", show_alert=True)
        return

    data = callback_query.data
    await callback_query.answer() # –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ –∫–æ–ª–±—ç–∫

    # –°–±—Ä–æ—Å FSM –ø—Ä–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –º–µ–∂–¥—É –º–µ–Ω—é —Ä–∞–∑–¥–µ–ª–æ–≤
    # –≠—Ç–æ –≤–∞–∂–Ω–æ, —á—Ç–æ–±—ã –≤—ã–π—Ç–∏ –∏–∑ –ª—é–±–æ–≥–æ FSM-–¥–∏–∞–ª–æ–≥–∞, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É –º–µ–Ω—é
    current_state = await state.get_state()
    if current_state:
         logging.info(f"–°–±—Ä–æ—Å FSM –ø—Ä–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –º–µ–Ω—é –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è: {current_state}")
         await state.clear()


    # –õ–æ–≥–∏–∫–∞ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏ –ø–æ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–µ
    if data == ADMIN_PRODUCTS_CALLBACK:
        await show_products_menu_aiogram(callback_query, state)
    elif data == ADMIN_STOCK_CALLBACK:
        await show_stock_menu_aiogram(callback_query, state)
    elif data == ADMIN_CATEGORIES_CALLBACK:
        await show_categories_menu_aiogram(callback_query, state)
    elif data == ADMIN_MANUFACTURERS_CALLBACK: # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ MANUFACTURER_MAIN_MENU_CALLBACK –Ω–∞ ADMIN_MANUFACTURERS_CALLBACK
        await show_manufacturers_menu_aiogram(callback_query, state)
    elif data == ADMIN_LOCATIONS_CALLBACK:
        await show_locations_menu_aiogram(callback_query, state)
    elif data == ADMIN_BACK_MAIN:
        # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" –∏–∑ –ø–æ–¥–º–µ–Ω—é –≤–µ–¥–µ—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        await show_admin_main_menu_aiogram(callback_query, state)
    else:
        logging.warning(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–π –∫–æ–ª–±—ç–∫ –≤ admin_menu_navigation_handler: {data}")
        await show_admin_main_menu_aiogram(callback_query, state)


# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π "–î–æ–±–∞–≤–∏—Ç—å" (ENTRY POINTS –¥–ª—è FSM –¥–æ–±–∞–≤–ª–µ–Ω–∏—è) ---
# –≠—Ç–∏ —Ö—ç–Ω–¥–ª–µ—Ä—ã –±—É–¥—É—Ç –≤—ã–∑—ã–≤–∞—Ç—å —Å—Ç–∞—Ä—Ç–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö FSM.
# –°–∞–º–∏ FSM-–¥–∏–∞–ª–æ–≥–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –≤ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –º–æ–¥—É–ª—è—Ö (handlers.fsm.*_add_fsm).
# –ò—Ö —Ñ–∏–ª—å—Ç—Ä—ã (F.data == ...) –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ bot.py –∏–ª–∏ admin_router –ü–ï–†–ï–î –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–º —Ö—ç–Ω–¥–ª–µ—Ä–æ–º.

async def handle_product_add(callback_query: types.CallbackQuery, state: FSMContext):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç FSM –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¢–æ–≤–∞—Ä–∞."""
    # state.clear() –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ start_product_add
    await start_product_add(callback_query, state)


async def handle_stock_add(callback_query: types.CallbackQuery, state: FSMContext):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç FSM –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –û—Å—Ç–∞—Ç–∫–∞."""
    await start_stock_add(callback_query, state)


async def handle_category_add(callback_query: types.CallbackQuery, state: FSMContext):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç FSM –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ö–∞—Ç–µ–≥–æ—Ä–∏–∏."""
    await start_category_add(callback_query, state)


async def handle_manufacturer_add(callback_query: types.CallbackQuery, state: FSMContext):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç FSM –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è."""
    await start_manufacturer_add(callback_query, state)


async def handle_location_add(callback_query: types.CallbackQuery, state: FSMContext):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç FSM –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è."""
    await start_location_add(callback_query, state)


# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π "–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫" (ENTRY POINTS –¥–ª—è LIST/DETAIL) ---
# –≠—Ç–∏ —Ö—ç–Ω–¥–ª–µ—Ä—ã –±—É–¥—É—Ç –≤—ã–∑—ã–≤–∞—Ç—å —Å—Ç–∞—Ä—Ç–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∏–∑ admin_list_detail_handlers_aiogram.
# –ò—Ö —Ñ–∏–ª—å—Ç—Ä—ã (F.data == ...) –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ bot.py –∏–ª–∏ admin_router –ü–ï–†–ï–î –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–º —Ö—ç–Ω–¥–ª–µ—Ä–æ–º.

async def handle_product_list(callback_query: types.CallbackQuery, state: FSMContext):
    """–ù–∞—á–∏–Ω–∞–µ—Ç –ø—Ä–æ—Å–º–æ—Ç—Ä —Å–ø–∏—Å–∫–∞ –¢–æ–≤–∞—Ä–æ–≤."""
    # state.clear() –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ show_entity_list (–æ–±–µ—Ä—Ç–∫–∞ handle_show_entity_list)
    await show_entity_list(callback_query, state, entity_type="product", page=0)


async def handle_stock_list(callback_query: types.CallbackQuery, state: FSMContext):
    """–ù–∞—á–∏–Ω–∞–µ—Ç –ø—Ä–æ—Å–º–æ—Ç—Ä —Å–ø–∏—Å–∫–∞ –û—Å—Ç–∞—Ç–∫–æ–≤."""
    await show_entity_list(callback_query, state, entity_type="stock", page=0)


async def handle_category_list(callback_query: types.CallbackQuery, state: FSMContext):
    """–ù–∞—á–∏–Ω–∞–µ—Ç –ø—Ä–æ—Å–º–æ—Ç—Ä —Å–ø–∏—Å–∫–∞ –ö–∞—Ç–µ–≥–æ—Ä–∏–π."""
    await show_entity_list(callback_query, state, entity_type="category", page=0)


async def handle_manufacturer_list(callback_query: types.CallbackQuery, state: FSMContext):
    """–ù–∞—á–∏–Ω–∞–µ—Ç –ø—Ä–æ—Å–º–æ—Ç—Ä —Å–ø–∏—Å–∫–∞ –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–µ–π."""
    await show_entity_list(callback_query, state, entity_type="manufacturer", page=0)


async def handle_location_list(callback_query: types.CallbackQuery, state: FSMContext):
    """–ù–∞—á–∏–Ω–∞–µ—Ç –ø—Ä–æ—Å–º–æ—Ç—Ä —Å–ø–∏—Å–∫–∞ –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–π."""
    await show_entity_list(callback_query, state, entity_type="location", page=0)


# --- Router Registration ---
# –≠—Ç–æ—Ç —Ñ–∞–π–ª –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Ä–æ—É—Ç–µ—Ä–∞ –¥–ª—è —Å–∞–º–æ–≥–æ —Å–µ–±—è,
# —Ç.–∫. –µ–≥–æ —Ö—ç–Ω–¥–ª–µ—Ä—ã —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É—é—Ç—Å—è –≤ bot.py (Command) –∏ admin_router (CallbackQuery)
# –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ FSM –∏ list/detail —Ä–æ—É—Ç–µ—Ä–æ–≤.
